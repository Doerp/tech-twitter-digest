name: Daily Tech Twitter RSS Update

on:
  schedule:
    # Run daily at 9 AM UTC (adjust to your preference)
    - cron: '0 9 * * *'
  
  workflow_dispatch:  # Allow manual trigger for testing
  
  push:
    branches:
      - main  # Change to 'master' if that's your default branch
    paths:
      - 'generate_rss.py'  # Re-run if script is updated

permissions:
  contents: write

jobs:
  generate-rss:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install feedgen beautifulsoup4 requests lxml
    
    - name: Test imports and file creation
      run: |
        cat > test_imports.py << 'EOF'
        import sys
        print("Python version:", sys.version)
        print("Starting imports...")
        
        try:
            print("1. Importing requests...", end=" ")
            import requests
            print("✓")
        except Exception as e:
            print(f"✗ {e}")
            sys.exit(1)
        
        try:
            print("2. Importing BeautifulSoup...", end=" ")
            from bs4 import BeautifulSoup
            print("✓")
        except Exception as e:
            print(f"✗ {e}")
            sys.exit(1)
        
        try:
            print("3. Importing feedgen...", end=" ")
            import feedgen.feed
            print("✓")
        except Exception as e:
            print(f"✗ {e}")
            sys.exit(1)
        
        print("\nAll imports successful!")
        print("\nTesting feedgen RSS creation...")
        
        try:
            fg = feedgen.feed.FeedGenerator()
            fg.id('test')
            fg.title('Test Feed')
            fg.link(href='http://example.com', rel='alternate')
            fg.rss_file('test_feed.xml')
            
            import os
            if os.path.exists('test_feed.xml'):
                print("✓ RSS file created successfully")
                print(f"  File size: {os.path.getsize('test_feed.xml')} bytes")
            else:
                print("✗ RSS file not created")
        except Exception as e:
            print(f"✗ Error: {e}")
            import traceback
            traceback.print_exc()
        EOF
        
        python test_imports.py
    
    - name: Generate RSS feed
      run: |
        echo "=== Starting RSS generation ==="
        echo "Working directory:"
        pwd
        echo ""
        echo "Running script with full output..."
        python -u generate_rss.py || {
          EXIT_CODE=$?
          echo ""
          echo "=== Script failed with exit code: $EXIT_CODE ==="
          echo "Checking for any output files..."
          ls -la
          exit $EXIT_CODE
        }
        echo ""
        echo "=== Script completed successfully ==="
        echo "Files after running script:"
        ls -la
    
    - name: Check generated files
      if: always()
      run: |
        echo "=== Checking for generated files ==="
        pwd
        ls -lah
        echo ""
        echo "=== XML files ==="
        ls -la *.xml 2>/dev/null || echo "No XML files found"
        echo ""
        echo "=== JSON files ==="
        ls -la *.json 2>/dev/null || echo "No JSON files found"
        echo ""
        if [ -f tech_ai_twitter.xml ]; then
          echo "=== RSS file content preview ==="
          head -20 tech_ai_twitter.xml
        fi
    
    - name: Commit and push RSS feed
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        echo "=== Attempting to add files ==="
        
        # Check and add XML file
        if [ -f tech_ai_twitter.xml ]; then
          echo "✓ Found tech_ai_twitter.xml"
          git add tech_ai_twitter.xml
        else
          echo "✗ tech_ai_twitter.xml not found"
        fi
        
        # Check and add cache file
        if [ -f list_members_cache.json ]; then
          echo "✓ Found list_members_cache.json"
          git add list_members_cache.json
        else
          echo "✗ list_members_cache.json not found"
        fi
        
        echo ""
        echo "=== Git status after adding ==="
        git status
        
        echo ""
        echo "=== Checking for changes ==="
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          echo "Changes detected, committing..."
          git commit -m "Update RSS feed - $(date +'%Y-%m-%d %H:%M UTC')"
          echo "Pushing to repository..."
          git push
          echo "✓ Push completed"
        fi
    
    - name: Upload RSS as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: rss-feed
        path: |
          tech_ai_twitter.xml
          list_members_cache.json
        retention-days: 30
        if-no-files-found: warn
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages
        keep_files: false
        destination_dir: .
